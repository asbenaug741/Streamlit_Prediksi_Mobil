{"cells":[{"cell_type":"markdown","metadata":{"id":"duIHNh18iezA"},"source":["#Import data and library"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"drewBbnhsgl2"},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","# Data preprocessing\n","from sklearn.preprocessing import StandardScaler"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yexTSxgbGnCN"},"outputs":[],"source":["# Import data From GoogleDrive\n","from google.colab import drive\n","drive.mount('/content/drive')\n","\n","df_car = pd.read_csv('/content/drive/MyDrive/SKRIPSI/Dataset/car_data.csv')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"90su3vRlHsRQ"},"outputs":[],"source":["df_car.head(10)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Ya1S3RghSAvl"},"outputs":[],"source":["df_car.shape"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"XWadwnhvkV0c"},"outputs":[],"source":["df_car.describe()"]},{"cell_type":"markdown","metadata":{"id":"wgbBWjETiXhB"},"source":["#Data Pre-processing"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"oXn9PThZSTrK"},"outputs":[],"source":["df_car.info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"endCBUSGqi6-"},"outputs":[],"source":["df_car.duplicated().value_counts()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Ty7OkDoJq7JD"},"outputs":[],"source":["df_car = df_car.drop_duplicates()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"XwCDC04PrHUl"},"outputs":[],"source":["df_car.duplicated().value_counts()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yX1uJ5i0j-fs"},"outputs":[],"source":["df_car = df_car.drop([\"Car_Name\"], axis=1)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qLaYvlya9OcC"},"outputs":[],"source":["df_car['Fuel_Type'].unique()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"sZddEwCn-DWE"},"outputs":[],"source":["df_car['Seller_Type'].unique()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"TmjEOteU-Jns"},"outputs":[],"source":["df_car['Transmission'].unique()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"e8tRoTf8uvSo"},"outputs":[],"source":["df_car['Fuel_Type'] = df_car['Fuel_Type'].map({'Petrol':2,'Diesel':1,'CNG':0})\n","df_car['Seller_Type'] = df_car['Seller_Type'].map({'Dealer':0, 'Individual':1})\n","df_car['Transmission']= df_car['Transmission'].map({'Manual':0, 'Automatic':1})"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_5AMh3JJf0t-"},"outputs":[],"source":["plt.figure(figsize=(8, 5))\n","\n","sns.heatmap(df_car.corr(numeric_only=True), annot=True)\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"jw8zed6Yd_aM"},"outputs":[],"source":["y = df_car['Selling_Price'] #dependen\n","X = df_car.drop('Selling_Price',axis=1) #independen"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"LLXDm0_Eb-fb"},"outputs":[],"source":["from sklearn.ensemble import RandomForestRegressor\n","# membuat variabel model dengan hyperparameter terbaik\n","model=RandomForestRegressor()\n","model.fit(X,y)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Dfv05lhQcRal"},"outputs":[],"source":["print(model.feature_importances_)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"B4hBuTb4rlAH"},"outputs":[],"source":["df_car.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"34D8uYd8sIt0"},"outputs":[],"source":["# Membagi dataset menjadi data latih dan data uji\n","# Import library untuk melakukan pembagian data\n","from sklearn.model_selection import train_test_split\n","\n","y = df_car['Selling_Price'] #dependen\n","X = df_car.drop('Selling_Price',axis=1) #independen\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2 , random_state = 0)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yIB6NNqtxi7A"},"outputs":[],"source":["print(X_train.shape, X_test.shape, y_train.shape, y_test.shape)"]},{"cell_type":"markdown","metadata":{"id":"pdid-fpai5f0"},"source":["# Random Forest Regression"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"LANOLsZDg_bh"},"outputs":[],"source":["# Random Forest Regressor Model\n","from sklearn.ensemble import RandomForestRegressor\n","\n","rf = RandomForestRegressor()\n","rf.fit(X_train,y_train)"]},{"cell_type":"markdown","metadata":{"id":"XKT4XumIUrUd"},"source":["## Feature Importance"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"88hvHBI5D0Yy"},"outputs":[],"source":["# Dapatkan fitur importance\n","features = rf.feature_importances_\n","\n","print(features)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"v4EXVBk4Y34l"},"outputs":[],"source":["#graph of feature importances\n","feat_importances = pd.Series(features, index=X.columns, )\n","feat_importances.plot(kind='barh')\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"CMZ5xuhSLUnA"},"source":["## Hyper Parameter dengan GridSearchCV\n","\n","---\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"v0uW6PulOdJK"},"outputs":[],"source":["# Tuning dan Hyperparameter\n","\n","# import library\n","from sklearn.metrics import make_scorer, mean_squared_error\n","from sklearn.model_selection import GridSearchCV\n","\n","param_grid = {\n","    'n_estimators': [50,100,200],\n","    'max_depth' : [10,20,30],\n","    'min_samples_split' : [2,5,7]\n","}"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"iPnIYVJdAR_-"},"outputs":[],"source":["# Buat objek RMSE scorer\n","# scorer = make_scorer(mean_absolute_error)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"TQmS10-slGlF"},"outputs":[],"source":["\n","# membuat variable GridCV\n","grid_search = GridSearchCV(estimator=rf, param_grid=param_grid, cv=5, scoring='neg_mean_absolute_error', verbose=2, n_jobs=-1)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qn_xIFXAlnIY"},"outputs":[],"source":["grid_search.fit(X_train, y_train)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"slDyRNNtmpDj"},"outputs":[],"source":["print(\"Hyperparameter Terbaik:\", grid_search.best_params_)\n","print(\"Nilai MSE Terbaik:\", grid_search.best_score_)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"HO-P5MkQeNhF"},"outputs":[],"source":["# Hasil MAE dari setiap kombinasi hyperparameter\n","results = grid_search.cv_results_\n","mae_scores = -results['mean_test_score']\n","params = results['params']\n","\n","for score, param in zip(mae_scores, params,):\n","    print(f\"Hyperparameter: {param}, MAE: {score}\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2b07vR73m4lf"},"outputs":[],"source":["from sklearn import metrics\n","from sklearn.metrics import mean_absolute_error, mean_squared_error\n","\n","best_rf = grid_search.best_estimator_\n","y_pred = best_rf.predict(X_test)\n","\n","mse = mean_squared_error(y_test, y_pred)\n","mae = mean_absolute_error(y_test, y_pred)\n","\n","print(best_rf)\n","print(\"Mean Squared Error (MSE) pada Data Pengujian:\", mse)\n","print(\"Mean Absolute Error (MAE) pada Data Pengujian:\", mae)\n"]},{"cell_type":"markdown","metadata":{"id":"60_ajBVizh5e"},"source":["# Training model Evaluation"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"msVzMKZOMvL9"},"outputs":[],"source":["from sklearn.ensemble import ExtraTreesRegressor\n","# membuat variabel model dengan hyperparameter terbaik\n","rf_model=RandomForestRegressor()\n","rf_model.fit(X_train,y_train)"]},{"cell_type":"markdown","metadata":{"id":"QNOrF34xVPR4"},"source":["## Evaluasi Training Data"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"FZ3LNmaozrSt"},"outputs":[],"source":["# training r_sq\n","print(rf_model.score(X_train, y_train) )"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"j6YnzayRJPZ3"},"outputs":[],"source":["# prediksi data training\n","ytrain_pred = rf_model.predict(X_train)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1fFLmrTt5I21"},"outputs":[],"source":["#evaluasi dengan MAE\n","mae = mean_absolute_error(y_train, ytrain_pred)\n","print('Hasil Evaluasi MAE :', mae)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Nq1h8Xix5n3d"},"outputs":[],"source":["#Evaluasi dengan MSE\n","mse = mean_squared_error(y_train, ytrain_pred)\n","print('Hasil Evaluasi MSE :', mse)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Vrj5EpcC6HoU"},"outputs":[],"source":["#Evalusi dengan RMSE\n","# RMSE adalah akar kuadrat dari MSE\n","print('Hasil Evaluasi RMSE:', np.sqrt(mse))"]},{"cell_type":"markdown","metadata":{"id":"7YZ9UL7cVciS"},"source":["## Evaluasi Testing Data"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"lNWhRT5lADgp"},"outputs":[],"source":["#Menghitung koefisien determinasi data testing\n","print('Hasil Testing r_sq :', rf.score(X_test, y_test))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"IZl39ZWW8nbZ"},"outputs":[],"source":["#Prediksi data testing\n","ytest_pred = rf_model.predict(X_test)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PBtgcm15lEI7"},"outputs":[],"source":["# Menghitung Mean Absolute Error\n","print('Hasil Perhitngan MAE:', mean_absolute_error(y_test, ytest_pred))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"eqmWNkvpEKBL"},"outputs":[],"source":["print('Hasil Prediksi tersing dengan r2:', metrics.r2_score(y_test, ytest_pred))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"x-boeV6NkL9z"},"outputs":[],"source":["# menghitung Mean Square Error\n","print('Hasil Perhitungan MSE:', mean_squared_error(y_test, ytest_pred))"]},{"cell_type":"markdown","metadata":{"id":"d2kj-OQVVudk"},"source":["## Hasil data aktual dan data prediksi"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"nF9bc-BOMenZ"},"outputs":[],"source":["compare = pd.DataFrame({'Actual': y_test, 'Predict': ytest_pred})\n","compare"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2HhLL-uNfkpd"},"outputs":[],"source":["# dataframe perbandingan antara data uji dengan hasil prediksi\n","DataFrame = pd.DataFrame()\n","DataFrame[\"data uji\"] = y_test\n","DataFrame[\"Prediksi\"] = ytest_pred\n","\n","plt.figure(figsize=(15,6))\n","sns.lineplot(data=DataFrame)\n","plt.show()\n"]},{"cell_type":"markdown","metadata":{"id":"FY_1FwCaV8JI"},"source":["# Pengujian Prediksi Model dengan Data Asli"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yFgVt6x3KMsQ"},"outputs":[],"source":["# fitur yang harus dimasukkan\n","# ['Year','Present_Price','Kms_Driven','Fuel_Type','Seller_Type','Transmission','Owner']\n","\n","data_mobil_bekas = np.array([[2014,\t5.59,\t27000,\t1, 1, 0,0]])\n","Predik_Harga = rf_model.predict(data_mobil_bekas)\n","print('Harga Mobil Bekas dalam Lack: Rupee ',Predik_Harga*100000)\n","print('Harga Mobil Bekas dalam Rupiah: Rp.',Predik_Harga*18652353)"]},{"cell_type":"markdown","metadata":{"id":"1C4QRPtuna3v"},"source":["# Pembangunan tampilan Frontend dengan Streamlit"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"q9Jkbq0ZZs4P"},"outputs":[],"source":["# Streamlit\n","!pip install -q streamlit"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"oFNlCMmYnZzF"},"outputs":[],"source":["import pickle\n","\n","filename = 'model.sav'\n","pickle.dump(rf_model,open(filename,'wb'))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"U_xVrvKas9MM"},"outputs":[],"source":["\n","%%writefile app.py\n","\n","import pickle\n","import streamlit as st\n","import base64\n","\n","model = pickle.load(open('model.sav','rb'))\n","\n","st.title('Estimasi Harga Mobil Bekas')\n","\n","Year = st.number_input('Tahun Mobil',0)\n","\n","Pprice = st.number_input('Harga Mobil Terbaru',0)\n","Present_Price = Pprice/18652353\n","\n","Kms_Driven = st.number_input('Kilometer Mobil',0)\n","\n","Fuel_Type = st.radio('Bahan Bakar',{0,1,2})\n","Seller_Type = st.radio('Jenis Penjual',[0,1])\n","Transmission = st.radio('Transmisi Mobil',[0,1])\n","Owner = st.number_input('Jumlah kepemilikan Mobil Sebelumnya',0,10)\n","\n","predict = ''\n","\n","if st.button('Estimasi Harga'):\n","  predict = model.predict(\n","      [[Year,Present_Price,Kms_Driven,Fuel_Type,Seller_Type,Transmission,Owner]]\n","  )\n","  toRupiah = predict*18652353\n","  st.write('Estimasi Harga Dalam Rupiah : ')\n","  st.success(f'Rp. {toRupiah[0]}')\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PvJGVPIvnwnx"},"outputs":[],"source":["!npm install localtunnel"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"pLUkosj9ukRV"},"outputs":[],"source":["!streamlit run app.py &>/content/logs.txt & npx localtunnel --port 8501 & curl ipv4.icanhazip.com"]}],"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNjrLQZeY/flq1ejmyROSG1"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}